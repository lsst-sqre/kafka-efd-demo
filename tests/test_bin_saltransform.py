"""Tests for the kafkaefd.bin.saltransform module.
"""

import json

import pytest
from kafkit.registry.sansio import MockRegistryApi

from kafkaefd.bin.saltransform import SalTextTransformer


@pytest.mark.asyncio
async def test_transform_thermal():
    schema = json.loads(THERMAL_SCHEMA)
    body = {
        'schema': json.dumps(schema),
        "subject": "schema1",
        "version": 1,
        "id": 2
    }
    registry = MockRegistryApi(
        body=json.dumps(body).encode('utf-8')
    )
    transformer = SalTextTransformer(registry)

    name, message = await transformer.transform(
        'MTM1M3TS_telemetry', THERMAL_MESSAGE)
    assert isinstance(message, bytes)
    assert name == 'lsst.sal.MTM1M3TS_thermalData'


THERMAL_MESSAGE = "MTM1M3TS_thermalData:( 'LSST TEST REVCODE' , 1547758756.335189 , 1547758754.901990 , 9940 , 1 , 1 , 1547758756.332947 , 22.624901, 21.913099, 21.834101, 22.022400, 21.948099, 21.852400, 22.255199, 21.988800, 21.836500, 21.915800, 21.802401, 22.237400, 22.240400, 21.991800, 21.846500, 21.893700, 21.930099, 21.866800, 21.816799, 21.900101, 21.859200, 21.822701, 21.794600, 22.250000, 21.872499, 21.846001, 21.800699, 22.051100, 21.858801, 21.975700, 22.292601, 22.027100, 22.271999, 22.053101, 21.851601, 21.989500, 21.920900, 21.875299, 21.820101, 21.947599, 21.817499, 22.302799, 22.288601, 21.867901, 21.857401, 21.809601, 22.262600, 22.258101, 22.261900, 22.280899, 22.286200, 22.299101, 22.309700, 22.308701, 22.310400, 22.299900, 22.278700, 22.272499, 22.264099, 22.264299, 22.263100, 22.284201, 22.289499, 22.292400, 22.296900, 22.294201, 22.292601, 22.292101, 22.286301, 22.281200, 22.272499, 22.273800, 22.265900, 22.278299, 22.278500, 22.279600, 22.277500, 22.277500, 22.281601, 22.287701, 22.289301, 22.276800, 22.265200, 22.270201, 22.257601, 22.270399, 22.267500, 22.267300, 22.268801, 22.266500, 22.276100, 22.266899, 22.261200, 22.252100, 22.254499 , 22.594500, 22.002600, 21.868099, 22.306299, 22.302999, 21.897301, 21.839399, 21.836599, 21.848101, 21.807501, 21.927900, 21.825199, 21.994499, 21.931801, 21.851400, 21.933300, 21.804600, 21.941900, 22.322500, 21.997101, 21.840000, 21.957701, 21.916000, 22.287100, 21.910200, 21.827700, 22.376600, 21.983500, 22.377199, 21.836399, 21.974199, 22.020500, 21.899900, 22.312201, 21.890800, 21.865400, 21.834999, 22.036301, 21.934401, 21.850700, 22.042801, 21.982000, 21.925699, 21.850000, 22.335899, 22.330500, 22.317699, 22.317200, 22.308701, 22.365200, 22.362700, 22.353800, 22.353300, 22.344999, 22.338900, 22.340799, 22.340599, 22.331200, 22.329201, 22.320700, 22.316000, 22.354601, 22.356100, 22.364500, 22.357901, 22.351400, 22.352301, 22.351400, 22.341600, 22.334400, 22.331400, 22.321100, 22.316999, 22.356501, 22.351801, 22.347099, 22.354700, 22.360100, 22.359699, 22.363501, 22.353300, 22.347601, 22.340700, 22.335800, 22.326000, 22.367300, 22.365000, 22.366301, 22.370800, 22.366800, 22.357100, 22.353001, 22.351400, 22.346201, 22.339701 , 22.640301, 22.421499, 22.031799, 21.856701, 21.970400, 21.970100, 22.008200, 21.849199, 21.972601, 21.926001, 21.934000, 21.864700, 21.996500, 21.840000, 21.917000, 21.908899, 22.402000, 21.845400, 21.872101, 21.822901, 21.995399, 21.939301, 21.851101, 21.993099, 21.847300, 21.944901, 21.830799, 22.412300, 22.004999, 22.396601, 21.853500, 21.922800, 21.969700, 21.898300, 22.347401, 22.337999, 22.332600, 21.866501, 21.820900, 21.919800, 21.865999, 21.810499, 21.833000, 21.920900, 22.365700, 21.891199, 22.347300, 22.342501, 22.339500, 22.479500, 22.455999, 22.428600, 22.417200, 22.409201, 22.402201, 22.397100, 22.393400, 22.369200, 22.355200, 22.347700, 22.343100, 22.459200, 22.444300, 22.431801, 22.416401, 22.405399, 22.397699, 22.386400, 22.379499, 22.368200, 22.357901, 22.348600, 22.339899, 22.391600, 22.386101, 22.377600, 22.374201, 22.368999, 22.369600, 22.371700, 22.371300, 22.365400, 22.357901, 22.347900, 22.329300, 22.386299, 22.385000, 22.376699, 22.365101, 22.354700, 22.355700, 22.353701, 22.348600, 22.344601, 22.337799 , 22.711901, 22.010500, 21.935900, 21.883801, 21.828899, 21.886999, 21.847500, 21.812000, 22.003599, 21.856501, 21.999399, 21.937201, 22.379000, 21.858000, 21.931999, 21.822901, 21.950199, 22.006001, 21.838900, 21.934000, 21.895000, 21.858400, 21.809799, 21.964600, 21.822500, 21.899900, 21.842600, 21.809500, 21.896299, 21.870899, 21.838301, 22.081100, 21.959801, 21.867800, 22.388800, 22.388300, 22.056400, 21.977699, 21.911600, 21.832899, 22.431101, 22.420401, 22.417801, 22.409500, 22.413099, 22.402500, 22.396500, 22.391300, 22.385700, 22.451599, 22.452700, 22.445299, 22.436800, 22.432501, 22.434799, 22.429800, 22.417200, 22.404900, 22.390301, 22.392099, 22.391701, 22.482000, 22.469700, 22.458599, 22.441000, 22.433701, 22.422400, 22.429399, 22.429300, 22.422100, 22.415501, 22.407301, 22.390400, 22.443199, 22.439501, 22.421101, 22.406500, 22.403000, 22.408199, 22.413900, 22.405701, 22.404600, 22.403400, 22.392799, 22.390600, 22.403400, 22.394600, 22.386000, 22.382999, 22.376900, 22.370300, 22.368700, 22.375099, 22.378401, 22.379299)"  # noqa

THERMAL_SCHEMA = """
{
  "fields": [
    {
      "doc": "Timestamp when the Kafka message was created.",
      "name": "kafka_timestamp",
      "type": {
        "logicalType": "timestamp-millis",
        "type": "long"
      }
    },
    {
      "name": "timestamp",
      "sal_index": 0,
      "type": "double"
    },
    {
      "name": "thermocoupleScanner1",
      "sal_index": 1,
      "type": {
        "items": "float",
        "sal_count": 95,
        "type": "array"
      }
    },
    {
      "name": "thermocoupleScanner2",
      "sal_index": 2,
      "type": {
        "items": "float",
        "sal_count": 95,
        "type": "array"
      }
    },
    {
      "name": "thermocoupleScanner3",
      "sal_index": 3,
      "type": {
        "items": "float",
        "sal_count": 95,
        "type": "array"
      }
    },
    {
      "name": "thermocoupleScanner4",
      "sal_index": 4,
      "type": {
        "items": "float",
        "sal_count": 95,
        "type": "array"
      }
    }
  ],
  "name": "MTM1M3TS_thermalData",
  "namespace": "lsst.sal",
  "sal_subsystem": "MTM1M3TS",
  "sal_topic_type": "SALTelemetry",
  "sal_version": "3.8.35",
  "type": "record"
}
"""
